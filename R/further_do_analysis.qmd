---
title: "Further DO Analysis - Updated 2024-07-03"
author: "LB"
date: "2024-06-21"
execute: 
  echo: false
format: html
editor: visual
---

```{r}
#| warning: false
library(dplyr)
library(here)
library(ggplot2)
library(lubridate)
library(tidyr)

dat_sat <- readRDS(here("data/dissolved_oxygen_percent_saturation.rds"))
dat_mgl <- readRDS(here("data/dissolved_oxygen_uncorrected_mg_per_l.rds"))
temp <- readRDS(here("data/temperature_degree_c.rds"))
deployment_list <- readRDS(here("data/deployment_list.rds"))
county_list <- unique(dat_sat$county)
```


## Updated 'by month' figures
### Figures now show the total number of data points broken down by flag applied. 

Only %saturation data used for these figures

```{r}

get_suspect_occurrence_by_county_sat <- function(x){
  d <- dat_sat %>%
    select(county:station, timestamp_utc:last_col()) %>%
    filter(county==x & rolling_sd_flag_dissolved_oxygen_percent_saturation=="3") %>%
    mutate(obs_month = month(timestamp_utc, label=T, abbr=T)) %>% #label=TRUE
    group_by(obs_month) %>%
    count() %>%
    rename(num_observations=n)

  p <- ggplot(d, aes(x=obs_month, y=num_observations, fill=obs_month)) +
    geom_bar(stat="identity", fill="#2da8eb") +
    ggtitle(x)

  return(p)
}

get_suspect_occurrence_by_county_updated_sat <- function(x){
  d <- dat_sat %>%
    select(county:station, timestamp_utc:last_col()) %>%
    filter(county==x) %>%
    mutate(obs_month = month(timestamp_utc, label=T, abbr=T)) %>%
    group_by(rolling_sd_flag_dissolved_oxygen_percent_saturation, obs_month) %>%
    count() %>%
    rename(num_observations=n, flag=rolling_sd_flag_dissolved_oxygen_percent_saturation)
  
  ggplot(d, aes(x=obs_month, y=num_observations, fill=flag)) +
    geom_bar(position=position_fill(reverse=T), stat="identity") +
    ylab("Fraction of Total Observations") +
    xlab("Month") +
    ggtitle(x)
}

#get_suspect_occurrnce_by_county_updated_sat("Antigonish")
lapply(county_list, get_suspect_occurrence_by_county_updated_sat)

```

### What's going on in Antigonish?

The old plot tells a seemingly similar story as the other ones, but the stacked chart tells a completely different one

```{r}
get_suspect_occurrence_by_county_sat("Antigonish")
get_suspect_occurrence_by_county_updated_sat("Antigonish")

```

### The deployment_list dataset; used to uniquely identify and search through all deployments
```{r}
head(deployment_list)
```

### The split deployment range column in dat_sat
```{r}
head(dat_sat[1,8:9])
```


```{r}
percent_good_data=matrix(rep(NA,(3*398)),ncol=3)
percent_good_data=data.frame(percent_good_data)

names(percent_good_data)[1] <- "deployment_id"
names(percent_good_data)[2] <- "good_data_%"
names(percent_good_data)[3] <- "under_5_days_since_depl_start"
```


### Finding what percentage of data is 'good'

The code below was used to iterate through the entire deployment_list dataset and stored the percentage of 'good' data for each deployment in a separate dataframe

(This takes a good few minutes to run)

```{r}
#| echo: true

for(i in 1:398){
  percent_good_data[i,1]=i

  if(i != 136 & i != 210 & i != 211 & i != 281 & i != 299){ #These deployment_id's only have flag #2
    if(i %in% unique(dat_sat$deployment_id)){
      depl <- dat_sat %>%
        filter(deployment_id==i)

      depl_first_flag <- depl %>%
        filter(rolling_sd_flag_dissolved_oxygen_percent_saturation=="3")

      depl_first_flag <- depl_first_flag$timestamp_utc[1]

      good_data <- as.numeric(dat_sat %>%
                                filter(deployment_id==i & timestamp_utc < depl_first_flag) %>%
                                count())

      bad_data <- as.numeric(dat_sat %>%
                               filter(deployment_id==i & timestamp_utc >= depl_first_flag) %>%
                               count())

      percent_good_data[i,2]=round((good_data/(good_data+bad_data)), digits=4)

      if(as.numeric(difftime(depl_first_flag, depl$timestamp_utc[1], units="days")) < 5){
        percent_good_data[i,3] = "Y"
      }

    }

  }

}
```

## Histograms of 'good' data percentages

The first plot is all of the percentages together. The second has removed all deployments in which the first flag appears within five days of deployment. (Note the statistics below the graphs)

```{r}
good_data_percentages <- na.omit(percent_good_data$`good_data_%`)

hist(good_data_percentages, ylim=c(0,130))

x <- percent_good_data %>%
  filter(is.na(under_5_days_since_depl_start))

good_data_percentages_over_five <- na.omit(x$`good_data_%`)

hist(good_data_percentages_over_five, ylim=c(0,130))

```

Mean and Median of all good data percentages

```{r}

mean(good_data_percentages)
median(good_data_percentages)

```

Mean and Median of good data percentages with observations whose first flag occurs within the first 5 days of deployment removed

```{r}

mean(good_data_percentages_over_five)
median(good_data_percentages_over_five)

```


## Scatter plots of all good data percentages vs. deployment_id

Is there some correlation between percent of good data and deployment_id (and thus location)?

```{r}
plot(good_data_percentages, xlab="deployment_id")

```

Now, the same figure as above, but coloured by county


```{r}
percent_good_data_updated <- inner_join(percent_good_data, deployment_list, join_by(deployment_id))

y <- percent_good_data_updated %>%
  filter(!is.na(`good_data_%`))

ggplot(y, aes(x=deployment_id, y=`good_data_%`, fill=county)) +
  geom_point(aes(color=county))

z <- percent_good_data_updated %>% #Figure immediately before, zoomed in on the first four counties
  filter(!is.na(`good_data_%`) & county <= "Digby")

ggplot(z, aes(x=deployment_id, y=`good_data_%`, fill=county)) +
  geom_point(aes(color=county))
```

## Antigonish: Further Investigation

Below are all of the deployments from Antigonish with %sat data. All but one of these deployments have nearly all of their points flagged (hence the behaviour we saw earlier).

```{r}
deployment_plot <- function(x){
  d <- dat_sat %>%
    select(county:depl_end, timestamp_utc:last_col()) %>%
    filter(deployment_id==x) %>%   
    mutate(obs_month = month(timestamp_utc, label=T, abbr=T)) %>%
    group_by(rolling_sd_flag_dissolved_oxygen_percent_saturation, obs_month) %>%
    count() %>%
    rename(percent_observations=n, flag=rolling_sd_flag_dissolved_oxygen_percent_saturation)
  
  ggplot(d, aes(x=obs_month, y=percent_observations, fill=flag)) +
    geom_bar(position=position_fill(reverse=TRUE), stat="identity") +
    ggtitle(paste(deployment_list[x,3], deployment_list$depl_start[x], sep=", Deployed: "))
}

antigonish_deployment_list <- c(11,20,21,22,23,24,26,27,28,29,30,33)

lapply(antigonish_deployment_list, deployment_plot)

```

Other deployments, for reference

```{r}
#Three deployments picked at random
deployment_plot(318)
deployment_plot(104)
deployment_plot(161)
```

## Average Number of Days Before First Suspect Flag

### Note: The bar label is not the average number of days, but rather the number of deployments beginning in the indicated month

## %sat

```{r}
#| warning: false

mean_days_by_month_2 <- rep(NA, 12)
n_depl_by_month <- rep(NA, 12)
n_depl_by_month_with_observations <- rep(NA,12)

for(j in 1:12){
  curr_month_deployments <- deployment_list %>%
    filter(month(depl_start)==j)

  temporary_data <- dat_sat %>%
    filter(month(depl_start)==j)

  n_depl_by_month_with_observations[j] = length(unique(temporary_data$deployment_id))

  days_before_first_flag <- rep(NA, length(curr_month_deployments$deployment_id))

  n_depl_by_month[j] <- length(curr_month_deployments$deployment_id)

  for(i in 1:length(curr_month_deployments$deployment_id)){
    data <- dat_sat %>%
      filter(deployment_id == curr_month_deployments$deployment_id[i] & rolling_sd_flag_dissolved_oxygen_percent_saturation == 3)

    first_flag <- data$timestamp_utc[1]

    days_before_first_flag[i] <- as.numeric(difftime(first_flag, data$depl_start[1], units="days"))
  }

  mean_days_by_month_2[j]=mean(days_before_first_flag, na.rm=T)
}


mean_days_by_month <- data.frame(cbind(depl_month=1:12, mean_days_by_month_2, n_depl_by_month, n_depl_by_month_with_observations))

mean_days_by_month <- mean_days_by_month %>%
  mutate(depl_month=factor(month.abb[depl_month], levels=month.abb))

ggplot(mean_days_by_month, aes(x=depl_month, y=mean_days_by_month_2)) +
  geom_bar(stat="identity", fill="#49A2DE") +
  geom_text(aes(label=n_depl_by_month_with_observations), vjust=-0.3) +
  ggtitle("Average Number Of Days Before First Suspect Flag (%sat)") +
  xlab("Month of Deployment") +
  ylab("Mean Number Of Days")

```

## mg/L

```{r}
#| warning: false

mean_days_by_month_2 <- rep(NA, 12)
n_depl_by_month <- rep(NA, 12)
n_depl_by_month_with_observations <- rep(NA,12)

for(j in 1:12){
  curr_month_deployments <- deployment_list %>%
    filter(month(depl_start)==j)

  temporary_data <- dat_mgl %>%
    filter(month(depl_start)==j)

  n_depl_by_month_with_observations[j] = length(unique(temporary_data$deployment_id))

  days_before_first_flag <- rep(NA, length(curr_month_deployments$deployment_id))

  n_depl_by_month[j] <- length(curr_month_deployments$deployment_id)

  for(i in 1:length(curr_month_deployments$deployment_id)){
    data <- dat_mgl %>%
      filter(deployment_id == curr_month_deployments$deployment_id[i] & rolling_sd_flag_dissolved_oxygen_uncorrected_mg_per_l == 3)

    first_flag <- data$timestamp_utc[1]

    days_before_first_flag[i] <- as.numeric(difftime(first_flag, data$depl_start[1], units="days"))
  }

  mean_days_by_month_2[j]=mean(days_before_first_flag, na.rm=T)
}


mean_days_by_month <- data.frame(cbind(depl_month=1:12, mean_days_by_month_2, n_depl_by_month, n_depl_by_month_with_observations))

mean_days_by_month <- mean_days_by_month %>%
  mutate(depl_month=factor(month.abb[depl_month], levels=month.abb))

ggplot(mean_days_by_month, aes(x=depl_month, y=mean_days_by_month_2)) +
  geom_bar(stat="identity", fill="#49A2DE") +
  geom_text(aes(label=n_depl_by_month_with_observations), vjust=-0.3) +
  ggtitle("Average Number Of Days Before First Suspect Flag (mg/L)") +
  xlab("Month of Deployment") +
  ylab("Mean Number Of Days")

```

## Temp

```{r}
#| warning: false

mean_days_by_month_2 <- rep(NA, 12)
n_depl_by_month <- rep(NA, 12)
n_depl_by_month_with_observations <- rep(NA,12)

for(j in 1:12){
  curr_month_deployments <- deployment_list %>%
    filter(month(depl_start)==j)

  temporary_data <- temp %>%
    filter(month(depl_start)==j)

  n_depl_by_month_with_observations[j] = length(unique(temporary_data$deployment_id))

  days_before_first_flag <- rep(NA, length(curr_month_deployments$deployment_id))

  n_depl_by_month[j] <- length(curr_month_deployments$deployment_id)

  for(i in 1:length(curr_month_deployments$deployment_id)){
    data <- temp %>%
      filter(deployment_id == curr_month_deployments$deployment_id[i] & qc_flag_temperature_degree_c == 3)

    first_flag <- data$timestamp_utc[1]

    days_before_first_flag[i] <- as.numeric(difftime(first_flag, data$depl_start[1], units="days"))
  }

  mean_days_by_month_2[j]=mean(days_before_first_flag, na.rm=T)
}

mean_days_by_month <- data.frame(cbind(depl_month=1:12, mean_days_by_month_2, n_depl_by_month, n_depl_by_month_with_observations))

mean_days_by_month <- mean_days_by_month %>%
  mutate(depl_month=factor(month.abb[depl_month], levels=month.abb))

ggplot(mean_days_by_month, aes(x=depl_month, y=mean_days_by_month_2)) +
  geom_bar(stat="identity", fill="#49A2DE") +
  geom_text(aes(label=n_depl_by_month_with_observations), vjust=-0.3) +
  ggtitle("Average Number Of Days Before First Suspect Flag (Temp)") +
  xlab("Month of Deployment") +
  ylab("Mean Number Of Days")

```

